<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--Spring希望管理所有的业务逻辑组件，等。。-->
    <context:component-scan base-package="com.dlq.mvc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--引入数据库配置文件-->
    <!--<context:property-placeholder location="classpath:db.properties"></context:property-placeholder>-->

    <!--Spring用来控制业务逻辑。数据源、事务控制、aop-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>-->

    <!--spring事务管理器-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        &lt;!&ndash;注入数据源&ndash;&gt;
        <property name="dataSource" ref="dataSource"></property>
    </bean>-->

    <!--开启事务注解-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->

    <!--整合mybatis
        目的：1、spring管理所有组件。mapper实现类。
                service==》dao  @Autowired：自动注入mapper
             2、spring用来管理事务，spring声明式事务
    -->
    <!--创建出SqlSessionFactoryBean对象-->
    <!--<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        &lt;!&ndash;configLocation指定mybatis全局配置文件位置&ndash;&gt;
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        &lt;!&ndash;指定mapper文件位置&ndash;&gt;
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
    </bean>-->

    <!-- 配置一个可以批量执行的sqlSession -->
    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>-->

    <!--扫描所有的mapper接口的实现，让这些mapper能够自动注入；
    base-package：指定mapper接口的包名
    -->
    <!--<mybatis-spring:scan base-package="com.dlq.myssm.dao"></mybatis-spring:scan>-->
    <!--老版本配置 和上边配置一样-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dlq.mybatis.dao"></property>
    </bean>-->
</beans>
